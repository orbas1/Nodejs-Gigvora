import { Router } from 'express';
import asyncHandler from '../utils/asyncHandler.js';
import mentorshipController from '../controllers/mentorshipController.js';

const router = Router();

router.get('/dashboard', asyncHandler(mentorshipController.dashboard));
router.post('/availability', asyncHandler(mentorshipController.saveAvailability));
router.post('/packages', asyncHandler(mentorshipController.savePackages));
router.post('/profile', asyncHandler(mentorshipController.saveProfile));
router.post('/bookings', asyncHandler(mentorshipController.createBooking));
router.put('/bookings/:bookingId', asyncHandler(mentorshipController.updateBooking));
router.delete('/bookings/:bookingId', asyncHandler(mentorshipController.deleteBooking));
router.post('/clients', asyncHandler(mentorshipController.createClient));
router.put('/clients/:clientId', asyncHandler(mentorshipController.updateClient));
router.delete('/clients/:clientId', asyncHandler(mentorshipController.deleteClient));
router.post('/calendar/events', asyncHandler(mentorshipController.createEvent));
router.put('/calendar/events/:eventId', asyncHandler(mentorshipController.updateEvent));
router.delete('/calendar/events/:eventId', asyncHandler(mentorshipController.deleteEvent));
router.post('/support/tickets', asyncHandler(mentorshipController.createSupportTicket));
router.put('/support/tickets/:ticketId', asyncHandler(mentorshipController.updateSupportTicket));
router.delete('/support/tickets/:ticketId', asyncHandler(mentorshipController.deleteSupportTicket));
router.post('/inbox/messages', asyncHandler(mentorshipController.createMessage));
router.put('/inbox/messages/:messageId', asyncHandler(mentorshipController.updateMessage));
router.delete('/inbox/messages/:messageId', asyncHandler(mentorshipController.deleteMessage));
router.put('/verification/status', asyncHandler(mentorshipController.saveVerificationStatus));
router.post('/verification/documents', asyncHandler(mentorshipController.createVerificationDocument));
router.put('/verification/documents/:documentId', asyncHandler(mentorshipController.updateVerificationDocument));
router.delete('/verification/documents/:documentId', asyncHandler(mentorshipController.deleteVerificationDocument));
router.post('/wallet/transactions', asyncHandler(mentorshipController.createWalletTransaction));
router.put('/wallet/transactions/:transactionId', asyncHandler(mentorshipController.updateWalletTransaction));
router.delete('/wallet/transactions/:transactionId', asyncHandler(mentorshipController.deleteWalletTransaction));
router.post('/finance/invoices', asyncHandler(mentorshipController.createInvoice));
router.put('/finance/invoices/:invoiceId', asyncHandler(mentorshipController.updateInvoice));
router.delete('/finance/invoices/:invoiceId', asyncHandler(mentorshipController.deleteInvoice));
router.post('/finance/payouts', asyncHandler(mentorshipController.createPayout));
router.put('/finance/payouts/:payoutId', asyncHandler(mentorshipController.updatePayout));
router.delete('/finance/payouts/:payoutId', asyncHandler(mentorshipController.deletePayout));

export default router;
