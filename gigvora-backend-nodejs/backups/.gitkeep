# Gigvora database backups
#
# Backups generated by `npm run db:backup` are written to this directory.
# Each backup writes a compressed SQL dump alongside a `.meta.json` file that
# captures checksum, encryption, and origin metadata so restores can be audited.
#
# To keep the directory healthy in production:
# - Schedule `npm run db:backup` (or `node scripts/databaseBackup.js backup`) via
#   cron/Kubernetes Jobs with `--encrypt-key` sourced from your secret manager.
# - Mirror completed artefacts to long-term storage (e.g. S3 bucket with
#   lifecycle policies) once verification succeeds.
# - Run `npm run db:verify -- --file <path>` after each backup to confirm hash
#   integrity, then prune local archives older than your retention window.
# - Use `npm run db:backup -- --output /tmp --file latest.sql.gz --encrypt-key $KEY`
#   when executing ad-hoc snapshots; move the artefact here only after
#   verification so partially written files never land in Git.
# - Restrict filesystem permissions to the deployment user/group so API workers
#   cannot read raw dumpsâ€”only the automation account should have access.
#
# An empty placeholder file is tracked so Git retains this directory even when
# backups are rotated away in non-production environments.
